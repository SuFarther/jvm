jvm完整视频教程(建议多刷):https://www.bilibili.com/video/BV1yE411Z7AP?p=8&spm_id_from=pageDriver&vd_source=98a2c17cd840761333d12b88cb5580cc

1、什么是JVM?
定义: Java Virtual Machine-java程序的运行环境(java二进制字节码环境)

好处:
  1、一次编写,多次运行
  2、自动内存管理,垃圾回收功能
  3、数组下标越界检查
  4、多态

比较:
  jvm、jre、jdk
  开发JavaEE程序: JDK+应用服务器+IDE工具
  开发JavaSE程序: JDK+IDE工具
  JDK(JVM+基础类库+编译原理)
  JRE(JVM+基础类库)
  JVM

  他们都是经过操作系统(Windows、MacOS、Linux、Saloris)


  p2 学习JVM有什么用?
  1、面试
  2、理解底层原理
  3、中高级程序员必备技能


  学习路线
  java Class  ->     ClassLoader
                      ⬇    ⬆️
  JVM内存结构
    Method Area(方法区)       Heap(堆)  JVM Stacks(虚拟机栈)  PC Register(程序计数器) Native Method Stacks(本地方法栈)
       ⬇️                      ⬆️                               ⬆️  ⬇️
                  执行引擎                                    ⬅️  本地方法接口
                                                             ➡️
    Interpeter(解析器)      JIT compiler(即时编译器)
    GC垃圾回收


  内存结构
  1、程序计数器 2、虚拟机栈 3、本地方法栈 4、堆 5、方法区


  p3、程序计数器 PC   Register
  定义: Program Counter Register
  （指令内存地址） 0-》解析器-》机器码-》cpu
  作用: 记录下一条jvm指令的执行地址 程序计数器

  2、程序计数器的特点:
  1、是线程私有的(每个线程都有线程计数器)
  2、不会存在内存溢出

  p4 栈 JVM Stacks

  栈的特点:先进后出

  Java虚拟机栈: Java Virtual Machine Stacks
  定义
  1、每个线程所需要的内存，称为虚拟机栈
  2、每个栈由多个栈帧(Frame)组成,对应着每次方法调用时所占用的内存
  3、每个线程只有一个活动栈帧,对应着当前正在执行的那个方法


 虚拟机栈 2、1
  问题辨析
    1、垃圾回收是否涉及及栈内存？
    答：不需要。因为我们的栈内存无非就是我们一次次的方法调用所产生的栈帧内存，而栈帧内存在
    每一次方法调用后都会被弹出栈，也就会自动的被回收掉。所以根本就不需要垃圾回收管理我们的栈内存

    2、栈内存分配越大越好吗？
    答: -Xss size 。 Linux默认是1024kB,macOS:1024kB,windows:随默认的虚拟内存划分
    栈内存划分越大越好吗？答案不是,栈内存划分越大会导致线程数减少，因为我们的物理内存大小是一定的


    3、方法内的局部变量是否线程安全？
   答：看一个是不是线程安全的，其实是看多个线程是否对这个变量共享的，还是这个变量对每个变量是私有的。
   每个线程都有自己的局部变量,不会影响线程安全。
   如果共有的需要考虑线程安全问题
   （如果方法内局部变量没有逃离方法的作用访问,它是线程安全的）

2、2 栈内存溢出
  1、 栈帧过多导致栈内存溢出
  2、 栈帧过大导致栈内存溢出
